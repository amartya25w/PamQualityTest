//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ArconConnector.BusinessLayer.ARCOSWebDT {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ARCOSWebDTSoap", Namespace="http://ARCOS/")]
    public partial class ARCOSWebDT : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsConnectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnDataTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteNonQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnOptimizedDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServersSupportingServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsServiceValidatedSMonSysOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateARCONDeskInsightHostNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyIPAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsADAuthenticatedWithARCOSOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsADAuthenticatedWithARCOSLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDisplayNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserEmailIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SessionLogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionLogDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOTPToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSToMobileNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtendSessionDurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserLastLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCommandRestrictedInTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVideoFileNameForSessionLogIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogManagerSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFolderTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ARCONPAM_Validate_SetkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAPEMToolLogsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ARCOSWebDT() {
            this.Url = global::ArconConnector.BusinessLayer.Properties.Settings.Default.ArconConnector_BusinessLayer_ARCOSWebDT_ARCOSWebDT;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsConnectedCompletedEventHandler IsConnectedCompleted;
        
        /// <remarks/>
        public event InitializeConnectionCompletedEventHandler InitializeConnectionCompleted;
        
        /// <remarks/>
        public event GetConnectionDetailCompletedEventHandler GetConnectionDetailCompleted;
        
        /// <remarks/>
        public event ReturnDataTableCompletedEventHandler ReturnDataTableCompleted;
        
        /// <remarks/>
        public event ReturnDataSetCompletedEventHandler ReturnDataSetCompleted;
        
        /// <remarks/>
        public event ExecuteNonQueryCompletedEventHandler ExecuteNonQueryCompleted;
        
        /// <remarks/>
        public event ReturnOptimizedDataSetCompletedEventHandler ReturnOptimizedDataSetCompleted;
        
        /// <remarks/>
        public event GetServersSupportingServerCompletedEventHandler GetServersSupportingServerCompleted;
        
        /// <remarks/>
        public event IsServiceValidatedSMonSysCompletedEventHandler IsServiceValidatedSMonSysCompleted;
        
        /// <remarks/>
        public event UpdateARCONDeskInsightHostNameCompletedEventHandler UpdateARCONDeskInsightHostNameCompleted;
        
        /// <remarks/>
        public event GetMyIPAddressCompletedEventHandler GetMyIPAddressCompleted;
        
        /// <remarks/>
        public event IsADAuthenticatedWithARCOSCompletedEventHandler IsADAuthenticatedWithARCOSCompleted;
        
        /// <remarks/>
        public event IsADAuthenticatedWithARCOSLoginCompletedEventHandler IsADAuthenticatedWithARCOSLoginCompleted;
        
        /// <remarks/>
        public event GetUserDisplayNameCompletedEventHandler GetUserDisplayNameCompleted;
        
        /// <remarks/>
        public event GetUserEmailIDCompletedEventHandler GetUserEmailIDCompleted;
        
        /// <remarks/>
        public event SessionLogDataCompletedEventHandler SessionLogDataCompleted;
        
        /// <remarks/>
        public event GetSessionLogDataCompletedEventHandler GetSessionLogDataCompleted;
        
        /// <remarks/>
        public event SendSMSOTPToUserCompletedEventHandler SendSMSOTPToUserCompleted;
        
        /// <remarks/>
        public event SendSMSToMobileNoCompletedEventHandler SendSMSToMobileNoCompleted;
        
        /// <remarks/>
        public event ExtendSessionDurationCompletedEventHandler ExtendSessionDurationCompleted;
        
        /// <remarks/>
        public event UpdateUserLastLoginCompletedEventHandler UpdateUserLastLoginCompleted;
        
        /// <remarks/>
        public event IsCommandRestrictedInTimeCompletedEventHandler IsCommandRestrictedInTimeCompleted;
        
        /// <remarks/>
        public event GetVideoFileNameForSessionLogIDCompletedEventHandler GetVideoFileNameForSessionLogIDCompleted;
        
        /// <remarks/>
        public event GetLogManagerSettingCompletedEventHandler GetLogManagerSettingCompleted;
        
        /// <remarks/>
        public event GetConfigurationValueCompletedEventHandler GetConfigurationValueCompleted;
        
        /// <remarks/>
        public event GetFolderTimeCompletedEventHandler GetFolderTimeCompleted;
        
        /// <remarks/>
        public event ARCONPAM_Validate_SetkeyCompletedEventHandler ARCONPAM_Validate_SetkeyCompleted;
        
        /// <remarks/>
        public event InsertAPEMToolLogsCompletedEventHandler InsertAPEMToolLogsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/IsConnected", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsConnected(string pValue) {
            object[] results = this.Invoke("IsConnected", new object[] {
                        pValue});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsConnectedAsync(string pValue) {
            this.IsConnectedAsync(pValue, null);
        }
        
        /// <remarks/>
        public void IsConnectedAsync(string pValue, object userState) {
            if ((this.IsConnectedOperationCompleted == null)) {
                this.IsConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsConnectedOperationCompleted);
            }
            this.InvokeAsync("IsConnected", new object[] {
                        pValue}, this.IsConnectedOperationCompleted, userState);
        }
        
        private void OnIsConnectedOperationCompleted(object arg) {
            if ((this.IsConnectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsConnectedCompleted(this, new IsConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/InitializeConnection", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InitializeConnection(string pWHO) {
            object[] results = this.Invoke("InitializeConnection", new object[] {
                        pWHO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeConnectionAsync(string pWHO) {
            this.InitializeConnectionAsync(pWHO, null);
        }
        
        /// <remarks/>
        public void InitializeConnectionAsync(string pWHO, object userState) {
            if ((this.InitializeConnectionOperationCompleted == null)) {
                this.InitializeConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeConnectionOperationCompleted);
            }
            this.InvokeAsync("InitializeConnection", new object[] {
                        pWHO}, this.InitializeConnectionOperationCompleted, userState);
        }
        
        private void OnInitializeConnectionOperationCompleted(object arg) {
            if ((this.InitializeConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeConnectionCompleted(this, new InitializeConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetConnectionDetail", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetConnectionDetail(string RemoteIP) {
            object[] results = this.Invoke("GetConnectionDetail", new object[] {
                        RemoteIP});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionDetailAsync(string RemoteIP) {
            this.GetConnectionDetailAsync(RemoteIP, null);
        }
        
        /// <remarks/>
        public void GetConnectionDetailAsync(string RemoteIP, object userState) {
            if ((this.GetConnectionDetailOperationCompleted == null)) {
                this.GetConnectionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionDetailOperationCompleted);
            }
            this.InvokeAsync("GetConnectionDetail", new object[] {
                        RemoteIP}, this.GetConnectionDetailOperationCompleted, userState);
        }
        
        private void OnGetConnectionDetailOperationCompleted(object arg) {
            if ((this.GetConnectionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionDetailCompleted(this, new GetConnectionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/ReturnDataTable", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReturnDataTable(ARCOSWebDTParams pValue) {
            object[] results = this.Invoke("ReturnDataTable", new object[] {
                        pValue});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnDataTableAsync(ARCOSWebDTParams pValue) {
            this.ReturnDataTableAsync(pValue, null);
        }
        
        /// <remarks/>
        public void ReturnDataTableAsync(ARCOSWebDTParams pValue, object userState) {
            if ((this.ReturnDataTableOperationCompleted == null)) {
                this.ReturnDataTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnDataTableOperationCompleted);
            }
            this.InvokeAsync("ReturnDataTable", new object[] {
                        pValue}, this.ReturnDataTableOperationCompleted, userState);
        }
        
        private void OnReturnDataTableOperationCompleted(object arg) {
            if ((this.ReturnDataTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnDataTableCompleted(this, new ReturnDataTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/ReturnDataSet", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReturnDataSet(ARCOSWebDTParams pValue) {
            object[] results = this.Invoke("ReturnDataSet", new object[] {
                        pValue});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnDataSetAsync(ARCOSWebDTParams pValue) {
            this.ReturnDataSetAsync(pValue, null);
        }
        
        /// <remarks/>
        public void ReturnDataSetAsync(ARCOSWebDTParams pValue, object userState) {
            if ((this.ReturnDataSetOperationCompleted == null)) {
                this.ReturnDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnDataSetOperationCompleted);
            }
            this.InvokeAsync("ReturnDataSet", new object[] {
                        pValue}, this.ReturnDataSetOperationCompleted, userState);
        }
        
        private void OnReturnDataSetOperationCompleted(object arg) {
            if ((this.ReturnDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnDataSetCompleted(this, new ReturnDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/ExecuteNonQuery", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteNonQuery(ARCOSWebDTParams pValue, string ARCOSConMode) {
            object[] results = this.Invoke("ExecuteNonQuery", new object[] {
                        pValue,
                        ARCOSConMode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(ARCOSWebDTParams pValue, string ARCOSConMode) {
            this.ExecuteNonQueryAsync(pValue, ARCOSConMode, null);
        }
        
        /// <remarks/>
        public void ExecuteNonQueryAsync(ARCOSWebDTParams pValue, string ARCOSConMode, object userState) {
            if ((this.ExecuteNonQueryOperationCompleted == null)) {
                this.ExecuteNonQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteNonQueryOperationCompleted);
            }
            this.InvokeAsync("ExecuteNonQuery", new object[] {
                        pValue,
                        ARCOSConMode}, this.ExecuteNonQueryOperationCompleted, userState);
        }
        
        private void OnExecuteNonQueryOperationCompleted(object arg) {
            if ((this.ExecuteNonQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteNonQueryCompleted(this, new ExecuteNonQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/ReturnOptimizedDataSet", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ReturnOptimizedDataSet(ARCOSWebDTParams pValue, string ARCOSConMode) {
            object[] results = this.Invoke("ReturnOptimizedDataSet", new object[] {
                        pValue,
                        ARCOSConMode});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void ReturnOptimizedDataSetAsync(ARCOSWebDTParams pValue, string ARCOSConMode) {
            this.ReturnOptimizedDataSetAsync(pValue, ARCOSConMode, null);
        }
        
        /// <remarks/>
        public void ReturnOptimizedDataSetAsync(ARCOSWebDTParams pValue, string ARCOSConMode, object userState) {
            if ((this.ReturnOptimizedDataSetOperationCompleted == null)) {
                this.ReturnOptimizedDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnOptimizedDataSetOperationCompleted);
            }
            this.InvokeAsync("ReturnOptimizedDataSet", new object[] {
                        pValue,
                        ARCOSConMode}, this.ReturnOptimizedDataSetOperationCompleted, userState);
        }
        
        private void OnReturnOptimizedDataSetOperationCompleted(object arg) {
            if ((this.ReturnOptimizedDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnOptimizedDataSetCompleted(this, new ReturnOptimizedDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetServersSupportingServer", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetServersSupportingServer(string Action, string ServerID, string RemoteIP) {
            object[] results = this.Invoke("GetServersSupportingServer", new object[] {
                        Action,
                        ServerID,
                        RemoteIP});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetServersSupportingServerAsync(string Action, string ServerID, string RemoteIP) {
            this.GetServersSupportingServerAsync(Action, ServerID, RemoteIP, null);
        }
        
        /// <remarks/>
        public void GetServersSupportingServerAsync(string Action, string ServerID, string RemoteIP, object userState) {
            if ((this.GetServersSupportingServerOperationCompleted == null)) {
                this.GetServersSupportingServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServersSupportingServerOperationCompleted);
            }
            this.InvokeAsync("GetServersSupportingServer", new object[] {
                        Action,
                        ServerID,
                        RemoteIP}, this.GetServersSupportingServerOperationCompleted, userState);
        }
        
        private void OnGetServersSupportingServerOperationCompleted(object arg) {
            if ((this.GetServersSupportingServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServersSupportingServerCompleted(this, new GetServersSupportingServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/IsServiceValidatedSMonSys", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsServiceValidatedSMonSys(ARCOSServiceValidationBAParam pValue) {
            object[] results = this.Invoke("IsServiceValidatedSMonSys", new object[] {
                        pValue});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsServiceValidatedSMonSysAsync(ARCOSServiceValidationBAParam pValue) {
            this.IsServiceValidatedSMonSysAsync(pValue, null);
        }
        
        /// <remarks/>
        public void IsServiceValidatedSMonSysAsync(ARCOSServiceValidationBAParam pValue, object userState) {
            if ((this.IsServiceValidatedSMonSysOperationCompleted == null)) {
                this.IsServiceValidatedSMonSysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsServiceValidatedSMonSysOperationCompleted);
            }
            this.InvokeAsync("IsServiceValidatedSMonSys", new object[] {
                        pValue}, this.IsServiceValidatedSMonSysOperationCompleted, userState);
        }
        
        private void OnIsServiceValidatedSMonSysOperationCompleted(object arg) {
            if ((this.IsServiceValidatedSMonSysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsServiceValidatedSMonSysCompleted(this, new IsServiceValidatedSMonSysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/UpdateARCONDeskInsightHostName", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateARCONDeskInsightHostName(string Action, string pHostName, string pIPAddress) {
            object[] results = this.Invoke("UpdateARCONDeskInsightHostName", new object[] {
                        Action,
                        pHostName,
                        pIPAddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateARCONDeskInsightHostNameAsync(string Action, string pHostName, string pIPAddress) {
            this.UpdateARCONDeskInsightHostNameAsync(Action, pHostName, pIPAddress, null);
        }
        
        /// <remarks/>
        public void UpdateARCONDeskInsightHostNameAsync(string Action, string pHostName, string pIPAddress, object userState) {
            if ((this.UpdateARCONDeskInsightHostNameOperationCompleted == null)) {
                this.UpdateARCONDeskInsightHostNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateARCONDeskInsightHostNameOperationCompleted);
            }
            this.InvokeAsync("UpdateARCONDeskInsightHostName", new object[] {
                        Action,
                        pHostName,
                        pIPAddress}, this.UpdateARCONDeskInsightHostNameOperationCompleted, userState);
        }
        
        private void OnUpdateARCONDeskInsightHostNameOperationCompleted(object arg) {
            if ((this.UpdateARCONDeskInsightHostNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateARCONDeskInsightHostNameCompleted(this, new UpdateARCONDeskInsightHostNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetMyIPAddress", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMyIPAddress(string Action, string pHostName, string pIPAddress) {
            object[] results = this.Invoke("GetMyIPAddress", new object[] {
                        Action,
                        pHostName,
                        pIPAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyIPAddressAsync(string Action, string pHostName, string pIPAddress) {
            this.GetMyIPAddressAsync(Action, pHostName, pIPAddress, null);
        }
        
        /// <remarks/>
        public void GetMyIPAddressAsync(string Action, string pHostName, string pIPAddress, object userState) {
            if ((this.GetMyIPAddressOperationCompleted == null)) {
                this.GetMyIPAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyIPAddressOperationCompleted);
            }
            this.InvokeAsync("GetMyIPAddress", new object[] {
                        Action,
                        pHostName,
                        pIPAddress}, this.GetMyIPAddressOperationCompleted, userState);
        }
        
        private void OnGetMyIPAddressOperationCompleted(object arg) {
            if ((this.GetMyIPAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyIPAddressCompleted(this, new GetMyIPAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/IsADAuthenticatedWithARCOS", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsADAuthenticatedWithARCOS(int pAuthType, string pDomain, string pUserName, string pPassword, string pDomainName) {
            object[] results = this.Invoke("IsADAuthenticatedWithARCOS", new object[] {
                        pAuthType,
                        pDomain,
                        pUserName,
                        pPassword,
                        pDomainName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsADAuthenticatedWithARCOSAsync(int pAuthType, string pDomain, string pUserName, string pPassword, string pDomainName) {
            this.IsADAuthenticatedWithARCOSAsync(pAuthType, pDomain, pUserName, pPassword, pDomainName, null);
        }
        
        /// <remarks/>
        public void IsADAuthenticatedWithARCOSAsync(int pAuthType, string pDomain, string pUserName, string pPassword, string pDomainName, object userState) {
            if ((this.IsADAuthenticatedWithARCOSOperationCompleted == null)) {
                this.IsADAuthenticatedWithARCOSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsADAuthenticatedWithARCOSOperationCompleted);
            }
            this.InvokeAsync("IsADAuthenticatedWithARCOS", new object[] {
                        pAuthType,
                        pDomain,
                        pUserName,
                        pPassword,
                        pDomainName}, this.IsADAuthenticatedWithARCOSOperationCompleted, userState);
        }
        
        private void OnIsADAuthenticatedWithARCOSOperationCompleted(object arg) {
            if ((this.IsADAuthenticatedWithARCOSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsADAuthenticatedWithARCOSCompleted(this, new IsADAuthenticatedWithARCOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/IsADAuthenticatedWithARCOSLogin", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IsADAuthenticatedWithARCOSLogin(int pAuthType, string pDomain, string pUserName, string pPassword, string pDomainName) {
            object[] results = this.Invoke("IsADAuthenticatedWithARCOSLogin", new object[] {
                        pAuthType,
                        pDomain,
                        pUserName,
                        pPassword,
                        pDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void IsADAuthenticatedWithARCOSLoginAsync(int pAuthType, string pDomain, string pUserName, string pPassword, string pDomainName) {
            this.IsADAuthenticatedWithARCOSLoginAsync(pAuthType, pDomain, pUserName, pPassword, pDomainName, null);
        }
        
        /// <remarks/>
        public void IsADAuthenticatedWithARCOSLoginAsync(int pAuthType, string pDomain, string pUserName, string pPassword, string pDomainName, object userState) {
            if ((this.IsADAuthenticatedWithARCOSLoginOperationCompleted == null)) {
                this.IsADAuthenticatedWithARCOSLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsADAuthenticatedWithARCOSLoginOperationCompleted);
            }
            this.InvokeAsync("IsADAuthenticatedWithARCOSLogin", new object[] {
                        pAuthType,
                        pDomain,
                        pUserName,
                        pPassword,
                        pDomainName}, this.IsADAuthenticatedWithARCOSLoginOperationCompleted, userState);
        }
        
        private void OnIsADAuthenticatedWithARCOSLoginOperationCompleted(object arg) {
            if ((this.IsADAuthenticatedWithARCOSLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsADAuthenticatedWithARCOSLoginCompleted(this, new IsADAuthenticatedWithARCOSLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetUserDisplayName", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserDisplayName(string pDomain, string pUserName, string pPassword, string pFindForUsername) {
            object[] results = this.Invoke("GetUserDisplayName", new object[] {
                        pDomain,
                        pUserName,
                        pPassword,
                        pFindForUsername});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDisplayNameAsync(string pDomain, string pUserName, string pPassword, string pFindForUsername) {
            this.GetUserDisplayNameAsync(pDomain, pUserName, pPassword, pFindForUsername, null);
        }
        
        /// <remarks/>
        public void GetUserDisplayNameAsync(string pDomain, string pUserName, string pPassword, string pFindForUsername, object userState) {
            if ((this.GetUserDisplayNameOperationCompleted == null)) {
                this.GetUserDisplayNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDisplayNameOperationCompleted);
            }
            this.InvokeAsync("GetUserDisplayName", new object[] {
                        pDomain,
                        pUserName,
                        pPassword,
                        pFindForUsername}, this.GetUserDisplayNameOperationCompleted, userState);
        }
        
        private void OnGetUserDisplayNameOperationCompleted(object arg) {
            if ((this.GetUserDisplayNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDisplayNameCompleted(this, new GetUserDisplayNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetUserEmailID", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserEmailID(string pDomain, string pUserName, string pPassword, string pFindForUsername) {
            object[] results = this.Invoke("GetUserEmailID", new object[] {
                        pDomain,
                        pUserName,
                        pPassword,
                        pFindForUsername});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserEmailIDAsync(string pDomain, string pUserName, string pPassword, string pFindForUsername) {
            this.GetUserEmailIDAsync(pDomain, pUserName, pPassword, pFindForUsername, null);
        }
        
        /// <remarks/>
        public void GetUserEmailIDAsync(string pDomain, string pUserName, string pPassword, string pFindForUsername, object userState) {
            if ((this.GetUserEmailIDOperationCompleted == null)) {
                this.GetUserEmailIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserEmailIDOperationCompleted);
            }
            this.InvokeAsync("GetUserEmailID", new object[] {
                        pDomain,
                        pUserName,
                        pPassword,
                        pFindForUsername}, this.GetUserEmailIDOperationCompleted, userState);
        }
        
        private void OnGetUserEmailIDOperationCompleted(object arg) {
            if ((this.GetUserEmailIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserEmailIDCompleted(this, new GetUserEmailIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/SessionLogData", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SessionLogData(ARCOSSessionLog pValue, string ARCOSConMode) {
            object[] results = this.Invoke("SessionLogData", new object[] {
                        pValue,
                        ARCOSConMode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SessionLogDataAsync(ARCOSSessionLog pValue, string ARCOSConMode) {
            this.SessionLogDataAsync(pValue, ARCOSConMode, null);
        }
        
        /// <remarks/>
        public void SessionLogDataAsync(ARCOSSessionLog pValue, string ARCOSConMode, object userState) {
            if ((this.SessionLogDataOperationCompleted == null)) {
                this.SessionLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSessionLogDataOperationCompleted);
            }
            this.InvokeAsync("SessionLogData", new object[] {
                        pValue,
                        ARCOSConMode}, this.SessionLogDataOperationCompleted, userState);
        }
        
        private void OnSessionLogDataOperationCompleted(object arg) {
            if ((this.SessionLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SessionLogDataCompleted(this, new SessionLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetSessionLogData", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetSessionLogData(string pSessionID) {
            object[] results = this.Invoke("GetSessionLogData", new object[] {
                        pSessionID});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionLogDataAsync(string pSessionID) {
            this.GetSessionLogDataAsync(pSessionID, null);
        }
        
        /// <remarks/>
        public void GetSessionLogDataAsync(string pSessionID, object userState) {
            if ((this.GetSessionLogDataOperationCompleted == null)) {
                this.GetSessionLogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionLogDataOperationCompleted);
            }
            this.InvokeAsync("GetSessionLogData", new object[] {
                        pSessionID}, this.GetSessionLogDataOperationCompleted, userState);
        }
        
        private void OnGetSessionLogDataOperationCompleted(object arg) {
            if ((this.GetSessionLogDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionLogDataCompleted(this, new GetSessionLogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/SendSMSOTPToUser", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserDualFactorOTP SendSMSOTPToUser(UserDualFactorOTP objUDFSMSOTP, bool pIsDirectConnect) {
            object[] results = this.Invoke("SendSMSOTPToUser", new object[] {
                        objUDFSMSOTP,
                        pIsDirectConnect});
            return ((UserDualFactorOTP)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSOTPToUserAsync(UserDualFactorOTP objUDFSMSOTP, bool pIsDirectConnect) {
            this.SendSMSOTPToUserAsync(objUDFSMSOTP, pIsDirectConnect, null);
        }
        
        /// <remarks/>
        public void SendSMSOTPToUserAsync(UserDualFactorOTP objUDFSMSOTP, bool pIsDirectConnect, object userState) {
            if ((this.SendSMSOTPToUserOperationCompleted == null)) {
                this.SendSMSOTPToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOTPToUserOperationCompleted);
            }
            this.InvokeAsync("SendSMSOTPToUser", new object[] {
                        objUDFSMSOTP,
                        pIsDirectConnect}, this.SendSMSOTPToUserOperationCompleted, userState);
        }
        
        private void OnSendSMSOTPToUserOperationCompleted(object arg) {
            if ((this.SendSMSOTPToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSOTPToUserCompleted(this, new SendSMSOTPToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/SendSMSToMobileNo", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSMSToMobileNo(string pMobileNo, string pSMSMessage) {
            object[] results = this.Invoke("SendSMSToMobileNo", new object[] {
                        pMobileNo,
                        pSMSMessage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSToMobileNoAsync(string pMobileNo, string pSMSMessage) {
            this.SendSMSToMobileNoAsync(pMobileNo, pSMSMessage, null);
        }
        
        /// <remarks/>
        public void SendSMSToMobileNoAsync(string pMobileNo, string pSMSMessage, object userState) {
            if ((this.SendSMSToMobileNoOperationCompleted == null)) {
                this.SendSMSToMobileNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSToMobileNoOperationCompleted);
            }
            this.InvokeAsync("SendSMSToMobileNo", new object[] {
                        pMobileNo,
                        pSMSMessage}, this.SendSMSToMobileNoOperationCompleted, userState);
        }
        
        private void OnSendSMSToMobileNoOperationCompleted(object arg) {
            if ((this.SendSMSToMobileNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSToMobileNoCompleted(this, new SendSMSToMobileNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/ExtendSessionDuration", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExtendSessionDuration(string Action, string TimeBasedAccessID, string ServiceSessionID, string AccessTypeID, string Description, string SessionDurationDD, string SessionDurationHH, string SessionDurationMM) {
            object[] results = this.Invoke("ExtendSessionDuration", new object[] {
                        Action,
                        TimeBasedAccessID,
                        ServiceSessionID,
                        AccessTypeID,
                        Description,
                        SessionDurationDD,
                        SessionDurationHH,
                        SessionDurationMM});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExtendSessionDurationAsync(string Action, string TimeBasedAccessID, string ServiceSessionID, string AccessTypeID, string Description, string SessionDurationDD, string SessionDurationHH, string SessionDurationMM) {
            this.ExtendSessionDurationAsync(Action, TimeBasedAccessID, ServiceSessionID, AccessTypeID, Description, SessionDurationDD, SessionDurationHH, SessionDurationMM, null);
        }
        
        /// <remarks/>
        public void ExtendSessionDurationAsync(string Action, string TimeBasedAccessID, string ServiceSessionID, string AccessTypeID, string Description, string SessionDurationDD, string SessionDurationHH, string SessionDurationMM, object userState) {
            if ((this.ExtendSessionDurationOperationCompleted == null)) {
                this.ExtendSessionDurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtendSessionDurationOperationCompleted);
            }
            this.InvokeAsync("ExtendSessionDuration", new object[] {
                        Action,
                        TimeBasedAccessID,
                        ServiceSessionID,
                        AccessTypeID,
                        Description,
                        SessionDurationDD,
                        SessionDurationHH,
                        SessionDurationMM}, this.ExtendSessionDurationOperationCompleted, userState);
        }
        
        private void OnExtendSessionDurationOperationCompleted(object arg) {
            if ((this.ExtendSessionDurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtendSessionDurationCompleted(this, new ExtendSessionDurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/UpdateUserLastLogin", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateUserLastLogin(string UserID) {
            object[] results = this.Invoke("UpdateUserLastLogin", new object[] {
                        UserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserLastLoginAsync(string UserID) {
            this.UpdateUserLastLoginAsync(UserID, null);
        }
        
        /// <remarks/>
        public void UpdateUserLastLoginAsync(string UserID, object userState) {
            if ((this.UpdateUserLastLoginOperationCompleted == null)) {
                this.UpdateUserLastLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserLastLoginOperationCompleted);
            }
            this.InvokeAsync("UpdateUserLastLogin", new object[] {
                        UserID}, this.UpdateUserLastLoginOperationCompleted, userState);
        }
        
        private void OnUpdateUserLastLoginOperationCompleted(object arg) {
            if ((this.UpdateUserLastLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserLastLoginCompleted(this, new UpdateUserLastLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/IsCommandRestrictedInTime", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsCommandRestrictedInTime(string[] parameter) {
            object[] results = this.Invoke("IsCommandRestrictedInTime", new object[] {
                        parameter});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsCommandRestrictedInTimeAsync(string[] parameter) {
            this.IsCommandRestrictedInTimeAsync(parameter, null);
        }
        
        /// <remarks/>
        public void IsCommandRestrictedInTimeAsync(string[] parameter, object userState) {
            if ((this.IsCommandRestrictedInTimeOperationCompleted == null)) {
                this.IsCommandRestrictedInTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCommandRestrictedInTimeOperationCompleted);
            }
            this.InvokeAsync("IsCommandRestrictedInTime", new object[] {
                        parameter}, this.IsCommandRestrictedInTimeOperationCompleted, userState);
        }
        
        private void OnIsCommandRestrictedInTimeOperationCompleted(object arg) {
            if ((this.IsCommandRestrictedInTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCommandRestrictedInTimeCompleted(this, new IsCommandRestrictedInTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetVideoFileNameForSessionLogID", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetVideoFileNameForSessionLogID(string pSessionId) {
            object[] results = this.Invoke("GetVideoFileNameForSessionLogID", new object[] {
                        pSessionId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetVideoFileNameForSessionLogIDAsync(string pSessionId) {
            this.GetVideoFileNameForSessionLogIDAsync(pSessionId, null);
        }
        
        /// <remarks/>
        public void GetVideoFileNameForSessionLogIDAsync(string pSessionId, object userState) {
            if ((this.GetVideoFileNameForSessionLogIDOperationCompleted == null)) {
                this.GetVideoFileNameForSessionLogIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVideoFileNameForSessionLogIDOperationCompleted);
            }
            this.InvokeAsync("GetVideoFileNameForSessionLogID", new object[] {
                        pSessionId}, this.GetVideoFileNameForSessionLogIDOperationCompleted, userState);
        }
        
        private void OnGetVideoFileNameForSessionLogIDOperationCompleted(object arg) {
            if ((this.GetVideoFileNameForSessionLogIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVideoFileNameForSessionLogIDCompleted(this, new GetVideoFileNameForSessionLogIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetLogManagerSetting", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLogManagerSetting() {
            object[] results = this.Invoke("GetLogManagerSetting", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogManagerSettingAsync() {
            this.GetLogManagerSettingAsync(null);
        }
        
        /// <remarks/>
        public void GetLogManagerSettingAsync(object userState) {
            if ((this.GetLogManagerSettingOperationCompleted == null)) {
                this.GetLogManagerSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogManagerSettingOperationCompleted);
            }
            this.InvokeAsync("GetLogManagerSetting", new object[0], this.GetLogManagerSettingOperationCompleted, userState);
        }
        
        private void OnGetLogManagerSettingOperationCompleted(object arg) {
            if ((this.GetLogManagerSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogManagerSettingCompleted(this, new GetLogManagerSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetConfigurationValue", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetConfigurationValue(int Id) {
            object[] results = this.Invoke("GetConfigurationValue", new object[] {
                        Id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationValueAsync(int Id) {
            this.GetConfigurationValueAsync(Id, null);
        }
        
        /// <remarks/>
        public void GetConfigurationValueAsync(int Id, object userState) {
            if ((this.GetConfigurationValueOperationCompleted == null)) {
                this.GetConfigurationValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationValueOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationValue", new object[] {
                        Id}, this.GetConfigurationValueOperationCompleted, userState);
        }
        
        private void OnGetConfigurationValueOperationCompleted(object arg) {
            if ((this.GetConfigurationValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationValueCompleted(this, new GetConfigurationValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/GetFolderTime", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFolderTime(string Filename) {
            object[] results = this.Invoke("GetFolderTime", new object[] {
                        Filename});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFolderTimeAsync(string Filename) {
            this.GetFolderTimeAsync(Filename, null);
        }
        
        /// <remarks/>
        public void GetFolderTimeAsync(string Filename, object userState) {
            if ((this.GetFolderTimeOperationCompleted == null)) {
                this.GetFolderTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFolderTimeOperationCompleted);
            }
            this.InvokeAsync("GetFolderTime", new object[] {
                        Filename}, this.GetFolderTimeOperationCompleted, userState);
        }
        
        private void OnGetFolderTimeOperationCompleted(object arg) {
            if ((this.GetFolderTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFolderTimeCompleted(this, new GetFolderTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/ARCONPAM_Validate_Setkey", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ARCONPAM_Validate_Setkey(string strID, string fromdate, string todate, string LicenseKey, string Mode) {
            object[] results = this.Invoke("ARCONPAM_Validate_Setkey", new object[] {
                        strID,
                        fromdate,
                        todate,
                        LicenseKey,
                        Mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ARCONPAM_Validate_SetkeyAsync(string strID, string fromdate, string todate, string LicenseKey, string Mode) {
            this.ARCONPAM_Validate_SetkeyAsync(strID, fromdate, todate, LicenseKey, Mode, null);
        }
        
        /// <remarks/>
        public void ARCONPAM_Validate_SetkeyAsync(string strID, string fromdate, string todate, string LicenseKey, string Mode, object userState) {
            if ((this.ARCONPAM_Validate_SetkeyOperationCompleted == null)) {
                this.ARCONPAM_Validate_SetkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnARCONPAM_Validate_SetkeyOperationCompleted);
            }
            this.InvokeAsync("ARCONPAM_Validate_Setkey", new object[] {
                        strID,
                        fromdate,
                        todate,
                        LicenseKey,
                        Mode}, this.ARCONPAM_Validate_SetkeyOperationCompleted, userState);
        }
        
        private void OnARCONPAM_Validate_SetkeyOperationCompleted(object arg) {
            if ((this.ARCONPAM_Validate_SetkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ARCONPAM_Validate_SetkeyCompleted(this, new ARCONPAM_Validate_SetkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ARCOS/InsertAPEMToolLogs", RequestNamespace="http://ARCOS/", ResponseNamespace="http://ARCOS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAPEMToolLogs(
                    string ActionType, 
                    string FileName, 
                    string EnvelopeNo, 
                    string EventName, 
                    System.DateTime EnvelopeGeneratedOn, 
                    string EnvelopeGeneratedBy, 
                    string TypeOfService, 
                    string ServerIPAddress, 
                    string ServerName, 
                    string UserName, 
                    string Domain, 
                    string Description1, 
                    string Description2, 
                    string Description3, 
                    string Comments, 
                    System.DateTime LogDate, 
                    System.DateTime CreatedOn) {
            object[] results = this.Invoke("InsertAPEMToolLogs", new object[] {
                        ActionType,
                        FileName,
                        EnvelopeNo,
                        EventName,
                        EnvelopeGeneratedOn,
                        EnvelopeGeneratedBy,
                        TypeOfService,
                        ServerIPAddress,
                        ServerName,
                        UserName,
                        Domain,
                        Description1,
                        Description2,
                        Description3,
                        Comments,
                        LogDate,
                        CreatedOn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAPEMToolLogsAsync(
                    string ActionType, 
                    string FileName, 
                    string EnvelopeNo, 
                    string EventName, 
                    System.DateTime EnvelopeGeneratedOn, 
                    string EnvelopeGeneratedBy, 
                    string TypeOfService, 
                    string ServerIPAddress, 
                    string ServerName, 
                    string UserName, 
                    string Domain, 
                    string Description1, 
                    string Description2, 
                    string Description3, 
                    string Comments, 
                    System.DateTime LogDate, 
                    System.DateTime CreatedOn) {
            this.InsertAPEMToolLogsAsync(ActionType, FileName, EnvelopeNo, EventName, EnvelopeGeneratedOn, EnvelopeGeneratedBy, TypeOfService, ServerIPAddress, ServerName, UserName, Domain, Description1, Description2, Description3, Comments, LogDate, CreatedOn, null);
        }
        
        /// <remarks/>
        public void InsertAPEMToolLogsAsync(
                    string ActionType, 
                    string FileName, 
                    string EnvelopeNo, 
                    string EventName, 
                    System.DateTime EnvelopeGeneratedOn, 
                    string EnvelopeGeneratedBy, 
                    string TypeOfService, 
                    string ServerIPAddress, 
                    string ServerName, 
                    string UserName, 
                    string Domain, 
                    string Description1, 
                    string Description2, 
                    string Description3, 
                    string Comments, 
                    System.DateTime LogDate, 
                    System.DateTime CreatedOn, 
                    object userState) {
            if ((this.InsertAPEMToolLogsOperationCompleted == null)) {
                this.InsertAPEMToolLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAPEMToolLogsOperationCompleted);
            }
            this.InvokeAsync("InsertAPEMToolLogs", new object[] {
                        ActionType,
                        FileName,
                        EnvelopeNo,
                        EventName,
                        EnvelopeGeneratedOn,
                        EnvelopeGeneratedBy,
                        TypeOfService,
                        ServerIPAddress,
                        ServerName,
                        UserName,
                        Domain,
                        Description1,
                        Description2,
                        Description3,
                        Comments,
                        LogDate,
                        CreatedOn}, this.InsertAPEMToolLogsOperationCompleted, userState);
        }
        
        private void OnInsertAPEMToolLogsOperationCompleted(object arg) {
            if ((this.InsertAPEMToolLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAPEMToolLogsCompleted(this, new InsertAPEMToolLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public partial class ARCOSWebDTParams {
        
        private int commandTypeValueField;
        
        private string aRCOSQueryField;
        
        private ARCOSSqlParameter[] aRCOSSqlParameterField;
        
        /// <remarks/>
        public int CommandTypeValue {
            get {
                return this.commandTypeValueField;
            }
            set {
                this.commandTypeValueField = value;
            }
        }
        
        /// <remarks/>
        public string ARCOSQuery {
            get {
                return this.aRCOSQueryField;
            }
            set {
                this.aRCOSQueryField = value;
            }
        }
        
        /// <remarks/>
        public ARCOSSqlParameter[] ARCOSSqlParameter {
            get {
                return this.aRCOSSqlParameterField;
            }
            set {
                this.aRCOSSqlParameterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public partial class ARCOSSqlParameter {
        
        private int dBTypeField;
        
        private int sizeField;
        
        private string parameterNameField;
        
        private string valueField;
        
        private int sqlDBTypeField;
        
        private string sqlValueField;
        
        private int directionField;
        
        private string xmlSchemaCollectionDatabaseField;
        
        private string xmlSchemaCollectionNameField;
        
        private string xmlSchemaCollectionOwningSchemaField;
        
        private string udtTypeNameField;
        
        private string typeNameField;
        
        private byte[] byteDataField;
        
        /// <remarks/>
        public int DBType {
            get {
                return this.dBTypeField;
            }
            set {
                this.dBTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public int SqlDBType {
            get {
                return this.sqlDBTypeField;
            }
            set {
                this.sqlDBTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SqlValue {
            get {
                return this.sqlValueField;
            }
            set {
                this.sqlValueField = value;
            }
        }
        
        /// <remarks/>
        public int Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public string XmlSchemaCollectionDatabase {
            get {
                return this.xmlSchemaCollectionDatabaseField;
            }
            set {
                this.xmlSchemaCollectionDatabaseField = value;
            }
        }
        
        /// <remarks/>
        public string XmlSchemaCollectionName {
            get {
                return this.xmlSchemaCollectionNameField;
            }
            set {
                this.xmlSchemaCollectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string XmlSchemaCollectionOwningSchema {
            get {
                return this.xmlSchemaCollectionOwningSchemaField;
            }
            set {
                this.xmlSchemaCollectionOwningSchemaField = value;
            }
        }
        
        /// <remarks/>
        public string UdtTypeName {
            get {
                return this.udtTypeNameField;
            }
            set {
                this.udtTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ByteData {
            get {
                return this.byteDataField;
            }
            set {
                this.byteDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public partial class ObjectCommonProperties {
        
        private int idField;
        
        private string createdByField;
        
        private System.DateTime createdOnField;
        
        private string modifiedByField;
        
        private System.DateTime modifiedOnField;
        
        private System.DateTime validUntilField;
        
        private RecordStatus getRecordStatusField;
        
        private PriorityMaster priorityStatusField;
        
        private bool isActiveField;
        
        private bool isImapActiveField;
        
        private bool isSendToGroupAdminField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        public string ModifiedBy {
            get {
                return this.modifiedByField;
            }
            set {
                this.modifiedByField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedOn {
            get {
                return this.modifiedOnField;
            }
            set {
                this.modifiedOnField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ValidUntil {
            get {
                return this.validUntilField;
            }
            set {
                this.validUntilField = value;
            }
        }
        
        /// <remarks/>
        public RecordStatus GetRecordStatus {
            get {
                return this.getRecordStatusField;
            }
            set {
                this.getRecordStatusField = value;
            }
        }
        
        /// <remarks/>
        public PriorityMaster PriorityStatus {
            get {
                return this.priorityStatusField;
            }
            set {
                this.priorityStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public bool IsImapActive {
            get {
                return this.isImapActiveField;
            }
            set {
                this.isImapActiveField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSendToGroupAdmin {
            get {
                return this.isSendToGroupAdminField;
            }
            set {
                this.isSendToGroupAdminField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public enum RecordStatus {
        
        /// <remarks/>
        NotChanged,
        
        /// <remarks/>
        Updated,
        
        /// <remarks/>
        NewAdded,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public enum PriorityMaster {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Priority1,
        
        /// <remarks/>
        Priority2,
        
        /// <remarks/>
        Priority3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public partial class UserDualFactorOTP {
        
        private string userIDField;
        
        private string userNameField;
        
        private bool isEnabledField;
        
        private int dualFactorIDField;
        
        private string mobileNoField;
        
        private string iMEIMACField;
        
        private string validationPasswordField;
        
        private string validationKeyField;
        
        private string validationCodeField;
        
        private ObjectCommonProperties commonDetailsField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        public int DualFactorID {
            get {
                return this.dualFactorIDField;
            }
            set {
                this.dualFactorIDField = value;
            }
        }
        
        /// <remarks/>
        public string MobileNo {
            get {
                return this.mobileNoField;
            }
            set {
                this.mobileNoField = value;
            }
        }
        
        /// <remarks/>
        public string IMEIMAC {
            get {
                return this.iMEIMACField;
            }
            set {
                this.iMEIMACField = value;
            }
        }
        
        /// <remarks/>
        public string ValidationPassword {
            get {
                return this.validationPasswordField;
            }
            set {
                this.validationPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string ValidationKey {
            get {
                return this.validationKeyField;
            }
            set {
                this.validationKeyField = value;
            }
        }
        
        /// <remarks/>
        public string ValidationCode {
            get {
                return this.validationCodeField;
            }
            set {
                this.validationCodeField = value;
            }
        }
        
        /// <remarks/>
        public ObjectCommonProperties CommonDetails {
            get {
                return this.commonDetailsField;
            }
            set {
                this.commonDetailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public partial class ARCOSSessionLog {
        
        private string sessionIDField;
        
        private string commandTypedField;
        
        private string commandResponseField;
        
        private bool isCommandLogDataField;
        
        private byte[] imageLogField;
        
        private string logNoField;
        
        private bool isCustomLogDateTimeField;
        
        private System.DateTime logDateTimeField;
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string CommandTyped {
            get {
                return this.commandTypedField;
            }
            set {
                this.commandTypedField = value;
            }
        }
        
        /// <remarks/>
        public string CommandResponse {
            get {
                return this.commandResponseField;
            }
            set {
                this.commandResponseField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCommandLogData {
            get {
                return this.isCommandLogDataField;
            }
            set {
                this.isCommandLogDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ImageLog {
            get {
                return this.imageLogField;
            }
            set {
                this.imageLogField = value;
            }
        }
        
        /// <remarks/>
        public string LogNo {
            get {
                return this.logNoField;
            }
            set {
                this.logNoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCustomLogDateTime {
            get {
                return this.isCustomLogDateTimeField;
            }
            set {
                this.isCustomLogDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LogDateTime {
            get {
                return this.logDateTimeField;
            }
            set {
                this.logDateTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ARCOS/")]
    public partial class ARCOSServiceValidationBAParam {
        
        private string lOBProfileNameField;
        
        private string iPAddressField;
        
        private string hostNameField;
        
        private string serviceTypeField;
        
        private string userNameField;
        
        private string webReferenceURLField;
        
        private string xwdField;
        
        private bool isValidateLOBProfileField;
        
        private bool isValidateServiceTypeField;
        
        private bool isValidateUserNameField;
        
        /// <remarks/>
        public string LOBProfileName {
            get {
                return this.lOBProfileNameField;
            }
            set {
                this.lOBProfileNameField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string HostName {
            get {
                return this.hostNameField;
            }
            set {
                this.hostNameField = value;
            }
        }
        
        /// <remarks/>
        public string ServiceType {
            get {
                return this.serviceTypeField;
            }
            set {
                this.serviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string WebReferenceURL {
            get {
                return this.webReferenceURLField;
            }
            set {
                this.webReferenceURLField = value;
            }
        }
        
        /// <remarks/>
        public string xwd {
            get {
                return this.xwdField;
            }
            set {
                this.xwdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValidateLOBProfile {
            get {
                return this.isValidateLOBProfileField;
            }
            set {
                this.isValidateLOBProfileField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValidateServiceType {
            get {
                return this.isValidateServiceTypeField;
            }
            set {
                this.isValidateServiceTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsValidateUserName {
            get {
                return this.isValidateUserNameField;
            }
            set {
                this.isValidateUserNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void IsConnectedCompletedEventHandler(object sender, IsConnectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void InitializeConnectionCompletedEventHandler(object sender, InitializeConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetConnectionDetailCompletedEventHandler(object sender, GetConnectionDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReturnDataTableCompletedEventHandler(object sender, ReturnDataTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnDataTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnDataTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReturnDataSetCompletedEventHandler(object sender, ReturnDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ExecuteNonQueryCompletedEventHandler(object sender, ExecuteNonQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteNonQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteNonQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReturnOptimizedDataSetCompletedEventHandler(object sender, ReturnOptimizedDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnOptimizedDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnOptimizedDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetServersSupportingServerCompletedEventHandler(object sender, GetServersSupportingServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServersSupportingServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServersSupportingServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void IsServiceValidatedSMonSysCompletedEventHandler(object sender, IsServiceValidatedSMonSysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsServiceValidatedSMonSysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsServiceValidatedSMonSysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateARCONDeskInsightHostNameCompletedEventHandler(object sender, UpdateARCONDeskInsightHostNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateARCONDeskInsightHostNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateARCONDeskInsightHostNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetMyIPAddressCompletedEventHandler(object sender, GetMyIPAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyIPAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyIPAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void IsADAuthenticatedWithARCOSCompletedEventHandler(object sender, IsADAuthenticatedWithARCOSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsADAuthenticatedWithARCOSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsADAuthenticatedWithARCOSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void IsADAuthenticatedWithARCOSLoginCompletedEventHandler(object sender, IsADAuthenticatedWithARCOSLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsADAuthenticatedWithARCOSLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsADAuthenticatedWithARCOSLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetUserDisplayNameCompletedEventHandler(object sender, GetUserDisplayNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDisplayNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDisplayNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetUserEmailIDCompletedEventHandler(object sender, GetUserEmailIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserEmailIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserEmailIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SessionLogDataCompletedEventHandler(object sender, SessionLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SessionLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SessionLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetSessionLogDataCompletedEventHandler(object sender, GetSessionLogDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SendSMSOTPToUserCompletedEventHandler(object sender, SendSMSOTPToUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSOTPToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSOTPToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserDualFactorOTP Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserDualFactorOTP)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SendSMSToMobileNoCompletedEventHandler(object sender, SendSMSToMobileNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSToMobileNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSToMobileNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ExtendSessionDurationCompletedEventHandler(object sender, ExtendSessionDurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtendSessionDurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtendSessionDurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateUserLastLoginCompletedEventHandler(object sender, UpdateUserLastLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserLastLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserLastLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void IsCommandRestrictedInTimeCompletedEventHandler(object sender, IsCommandRestrictedInTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCommandRestrictedInTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCommandRestrictedInTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetVideoFileNameForSessionLogIDCompletedEventHandler(object sender, GetVideoFileNameForSessionLogIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVideoFileNameForSessionLogIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVideoFileNameForSessionLogIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetLogManagerSettingCompletedEventHandler(object sender, GetLogManagerSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogManagerSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogManagerSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetConfigurationValueCompletedEventHandler(object sender, GetConfigurationValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetFolderTimeCompletedEventHandler(object sender, GetFolderTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFolderTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFolderTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ARCONPAM_Validate_SetkeyCompletedEventHandler(object sender, ARCONPAM_Validate_SetkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ARCONPAM_Validate_SetkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ARCONPAM_Validate_SetkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void InsertAPEMToolLogsCompletedEventHandler(object sender, InsertAPEMToolLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAPEMToolLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAPEMToolLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591